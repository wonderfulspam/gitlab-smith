# AFTER: Simplified conditional logic using workflow and better patterns
stages:
  - build
  - test
  - security
  - deploy

# Workflow rules to control when pipelines run (eliminates repetition)
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

build:
  stage: build
  image: python:3.11
  script:
    - python setup.py build

test:unit:
  stage: test
  image: python:3.11
  script:
    - pytest tests/

security:scan:
  stage: security
  image: security-scanner:latest
  script:
    - security-scan .
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|develop)$/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

deploy:staging:
  stage: deploy
  image: alpine:3.19
  script:
    - echo "Deploy to staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|develop)$/'

deploy:production:
  stage: deploy
  image: alpine:3.19
  script:
    - echo "Deploy to production"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-beta\d*)?$/'
      when: manual

cleanup:
  stage: deploy
  image: alpine:3.19
  script:
    - echo "Cleanup resources"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CLEANUP_SCHEDULE == "true"'
    - if: '$CI_COMMIT_BRANCH == "main" && $FORCE_CLEANUP == "true"'
      when: manual