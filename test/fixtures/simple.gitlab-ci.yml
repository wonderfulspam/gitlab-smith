stages:
  - build
  - test
  - deploy

variables:
  DATABASE_URL: "postgres://localhost/test"
  NODE_ENV: "production"

default:
  image: node:16
  before_script:
    - npm ci --cache .npm --prefer-offline

build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

test:unit:
  stage: test
  script:
    - npm run test:unit
  needs:
    - build
  coverage: '/Coverage: \d+\.\d+%/'

test:integration:
  stage: test
  script:
    - npm run test:integration
  dependencies:
    - build
  services:
    - postgres:13

deploy:staging:
  stage: deploy
  script:
    - echo "Deploying to staging"
    - npm run deploy:staging
  environment:
    name: staging
    url: https://staging.example.com
  only:
    - main
  needs:
    - test:unit
    - test:integration

deploy:production:
  stage: deploy
  script:
    - echo "Deploying to production"
    - npm run deploy:prod
  environment:
    name: production
    url: https://example.com
  when: manual
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: manual
  needs:
    - job: test:unit
    - job: test:integration